{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Duplicate function\n",
    "\n",
    "Python function that checks for any duplicates in an inputted array (matching algorithm)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "True\n",
      "False\n"
     ]
    }
   ],
   "source": [
<<<<<<< HEAD
    "# Gareth Duffy 10-02-19, bigO notation\n",
=======
    "# Gareth Duffy 10-02-19, O(n2) notation example\n",
>>>>>>> 67a540cde180f1af417e264d29fdc3dec9d558ac
    "\n",
    "def containsDuplicate(elements):\n",
    "    for i in range(0, len(elements)):\n",
    "        for j in range(0, len(elements)):\n",
    "            if i == j: # avoid self comparison/false positive\n",
    "                continue\n",
    "            if elements[i]==elements[j]:\n",
    "                return True # duplicate found\n",
    "    return False\n",
    "\n",
    "test1 = [0,2,1,3,5,1]\n",
    "test2 = [1,2,3,4,5,6]\n",
    "\n",
    "print(containsDuplicate(test1)) #Prints True\n",
    "print(containsDuplicate(test2)) #Prints False"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Recursion trace algorithm for the call count(0)\n",
    "\n",
    "def count(index):\n",
    "    print(index)\n",
    "    if index <2:\n",
    "        count(index + 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0\n",
      "1\n",
      "2\n"
     ]
    }
   ],
   "source": [
    "count(0)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
